{"version":3,"file":"static/js/263.52c2f5bb.chunk.js","mappings":"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","sources":["styles/AdminConsoleStyles.js","context/WithdrawalProvider.js","context/DepositProvider.js","context/AdminConsoleProvider.js","styles/DepositScreenStyles.js","styles/DepositInitiatorStyles.js","components/DepositInitiator.js","styles/DepositSuccessScreenStyles.js","components/DepositSuccessScreen.js","components/DepositScreen.js","styles/WithdrawalScreenStyles.js","styles/WithdrawalInitiatorStyles.js","components/WithdrawalInitiator.js","styles/WithdrawalSuccessScreenStyles.js","components/WithdrawalSuccessScreen.js","components/WithdrawalScreen.js","components/AdminConsole.js"],"sourcesContent":["import { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    logoContainer: {\r\n        // backgroundColor: 'red'\r\n    },\r\n\r\n    logo: {\r\n        width: '3rem',\r\n        padding: '.5rem',\r\n    },\r\n      \r\n    titleBar: {\r\n        background: 'linear-gradient(45deg, red, magenta, blue)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 .5rem',\r\n        height: '10vh',\r\n        // justifyContent: 'center',\r\n    },\r\n\r\n    banner: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        // width: '100%'\r\n    },\r\n        \r\n    title: {\r\n        fontSize: '1.5rem',\r\n        padding: '.5rem',\r\n        color: 'aliceblue',\r\n    },\r\n\r\n    avatar: {\r\n        marginLeft: 'auto',\r\n    },\r\n\r\n    popperBox: {\r\n        backgroundColor: '#666263',\r\n        padding: '.3rem',\r\n        border: '.2vw solid black',\r\n        borderRadius: '1vh',\r\n        color: 'aliceblue',\r\n    },\r\n\r\n    username: {\r\n        textAlign: 'center'\r\n    },\r\n\r\n    // logoutButton: {\r\n    //     backgroundColor: 'black',\r\n    // },\r\n\r\n    body: {\r\n        // backgroundImage: `url(${handshake})`,\r\n        // backgroundPosition: 'center', \r\n        // backgroundRepeat: 'no-repeat',\r\n        // backgroundSize: '25vh',\r\n        backgroundColor: '#2a2b2a',\r\n        height: '90vh',\r\n        overflowY: 'auto',\r\n    },\r\n\r\n    optionButton: {\r\n        color: 'white',\r\n        fontSize: '1.5rem',\r\n        fontWeight: 'bolder',\r\n        textAlign: 'center',\r\n        backgroundColor: 'black',\r\n        backgroundSize: 'contain',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: '2vw',\r\n        border: '.5px solid white',\r\n        margin: '.5rem',\r\n    },\r\n}));\r\n\r\nexport default useStyles;","import { createContext, useState } from \"react\";\r\n\r\nconst WithdrawalContext = createContext({});\r\n\r\nexport const WithdrawalProvider = ({children})=>{\r\n    const [withdrawal, setWithdrawal] = useState({});\r\n\r\n    return(\r\n        <WithdrawalContext.Provider value={{withdrawal, setWithdrawal}}>\r\n            {children}\r\n        </WithdrawalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default WithdrawalContext;","import { createContext, useState } from \"react\";\r\n\r\nconst DepositContext = createContext({});\r\n\r\nexport const DepositProvider = ({children})=>{\r\n    const [deposit, setDeposit] = useState({});\r\n\r\n    return(\r\n        <DepositContext.Provider value={{deposit, setDeposit}}>\r\n            {children}\r\n        </DepositContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DepositContext;","import { combineComponents } from 'utils/combineComponents';\r\nimport { WithdrawalProvider } from 'context/WithdrawalProvider';\r\nimport { DepositProvider } from 'context/DepositProvider';\r\nconst providers = [\r\n    WithdrawalProvider,\r\n    DepositProvider,\r\n]\r\nconst AdminConsoleProvider = combineComponents(...providers);\r\n\r\nexport default AdminConsoleProvider;","import { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n\r\n}));\r\n\r\nexport default useStyles;","import { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    customerCard: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        msTransform: 'translateY(-50%)',\r\n        transform: 'translateY(-50%)',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundImage: 'linear-gradient(darkslategrey, black, darkslategrey)',\r\n        borderRadius: '1rem',\r\n        boxShadow: '0 0 .5rem greenyellow',\r\n        margin: '.5rem',\r\n    },\r\n\r\n    heading: {\r\n        fontWeight: 'bolder',\r\n        fontSize: '1.7rem',\r\n        color: 'lightslategrey',\r\n    },\r\n\r\n    avatarContainer: {\r\n        display: 'flex',\r\n        aspectRatio: '1 / 1',\r\n        height: '40vh',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    depositForm: {\r\n        borderRadius: '1rem',\r\n        padding: '1rem'\r\n    },\r\n\r\n    entry: {\r\n        display: 'flex',\r\n        margin: '.5rem 0'\r\n    },\r\n\r\n    label: {\r\n        backgroundColor: 'beige',\r\n        margin: '.5% 2%',\r\n        padding: '.5rem',\r\n        borderRadius: '1rem',\r\n        width: '15rem',\r\n        textAlign: 'center',\r\n        fontWeight: 'bolder'\r\n    },\r\n\r\n    input: {\r\n        background: 'transparent',\r\n        color: 'limegreen',\r\n        // backgroundColor: 'white',\r\n        padding: '.5rem',\r\n        margin: '.5% 2%',\r\n        width: '100%',\r\n        borderRadius: '1rem',\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n\r\n        '&::-webkit-outer-spin-button':{\r\n            WebkitAppearance: 'none'\r\n        },\r\n\r\n        '&::-webkit-inner-spin-button':{\r\n            WebkitAppearance: 'none'\r\n        },\r\n\r\n        MozAppearance: 'textfield',\r\n    },\r\n}));\r\n\r\nexport default useStyles;","import axios from \"api/axios\";\r\nimport AuthContext from \"context/AuthProvider\";\r\nimport LoadingContext from \"context/LoadingProvider\";\r\nimport { useState, useContext } from \"react\";\r\nimport DepositContext from \"context/DepositProvider\";\r\nimport useStyles from \"styles/DepositInitiatorStyles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Avatar, Button } from \"@mui/material\";\r\n\r\nconst DEPOSIT_URL = '/admin/deposits';\r\nfunction DepositInitiator(){\r\n    const classes = useStyles();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const { deposit, setDeposit } = useContext(DepositContext);\r\n    const { loading, setLoading, loadingColor, setLoadingColor } = useContext(LoadingContext);\r\n    \r\n    const [ accountId, setAccountId ] = useState('');\r\n    const [ amountRupees, setAmountRupees ] = useState('');\r\n    const amountPaise = amountRupees ? (amountRupees * 100) : '';\r\n    // const [ loading, setLoading ] = useState(false);\r\n\r\n    const handleAccountIdUpdate = (e)=>{\r\n        const newId = parseInt(e.target.value) > 0 ? e.target.value : '';\r\n        setAccountId(newId);\r\n    }\r\n    const handleAmountRupeesUpdate = (e)=>{\r\n        const newAmount = parseInt(e.target.value) > 0 ? e.target.value : '';\r\n        setAmountRupees(newAmount);\r\n    }\r\n\r\n    const handleDeposit = async(e)=>{\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        try{\r\n            const token = auth?.token;\r\n            const response = await axios.post(\r\n                DEPOSIT_URL,\r\n                JSON.stringify({accountId, amountPaise}),\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: \"Bearer \"+token,\r\n                    },\r\n                }    \r\n            );\r\n            const depositData = response?.data;\r\n            setDeposit(depositData);\r\n            setLoading(false);\r\n            // alert(`Deposited INR${depositData?.amountPaise / 100} in account ${depositData?.toAccount}`)\r\n            navigate('success', {replace: true})\r\n        }catch(err){\r\n            setLoading(false);\r\n\r\n            if(!err?.response){\r\n                alert('No server response');\r\n            }\r\n            else{\r\n                alert(err?.response?.data?.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <div className={classes.customerCard}>\r\n                <span className={classes.heading}>\r\n                    DEPOSIT\r\n                </span>\r\n                <div className={classes.avatarContainer}>\r\n                    <Avatar\r\n                        sx={{\r\n                            bgcolor: 'greenyellow',\r\n                            color: 'green',\r\n                            width: '70%',\r\n                            height: '70%',\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={classes.depositForm}>\r\n                    <div className={classes.entry}>\r\n                        <label className={classes.label}>\r\n                            Account no.\r\n                        </label>\r\n                        <input\r\n                        id='account_no'\r\n                        type = 'number' \r\n                        className={classes.input}\r\n                        autoComplete='off'\r\n                        onChange={handleAccountIdUpdate}\r\n                        value={accountId}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.entry}>\r\n                        <label className={classes.label}>\r\n                            Deposit In ₹\r\n                        </label>\r\n                        <input\r\n                        id='amount'\r\n                        type = 'number' \r\n                        className={classes.input}\r\n                        autoComplete='off'\r\n                        onChange={handleAmountRupeesUpdate}\r\n                        value={amountRupees}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                    className={classes.submitButton}\r\n                    sx={{\r\n                        color: 'white', \r\n                        backgroundColor: '#4b484c',\r\n                        width: '100%',\r\n                        margin: '1rem 0'\r\n                        }}\r\n                    onClick={handleDeposit}\r\n                    disabled={!accountId.length || !amountRupees.length}\r\n                    >\r\n                        Record Deposit\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DepositInitiator;","import { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontSize: '1.5rem',\r\n    },\r\n    heading:{\r\n        backgroundColor: 'black',\r\n        color: 'green',\r\n        fontSize: '2rem',\r\n        borderRadius: '1rem',\r\n        boxShadow: '0 0 .5rem grey',\r\n    },\r\n    amount: {\r\n        color: 'royalblue',\r\n        fontSize: '3rem',\r\n    },\r\n    detailsHeading:{\r\n        backgroundColor: 'dimgrey',\r\n        fontWeight: 'bold',\r\n        border: '.2rem solid silver',\r\n    },\r\n    label:{\r\n        backgroundColor: 'darkslategrey',\r\n        padding: '1rem',\r\n        border: '.05rem solid black',\r\n    },\r\n    value:{\r\n        backgroundColor: 'grey',\r\n        padding: '1rem',\r\n        border: '.05rem solid black',\r\n    },\r\n}));\r\n\r\nexport default useStyles;","import useStyles from \"styles/DepositSuccessScreenStyles\";\r\nimport { Grid, Button } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport DepositContext from \"context/DepositProvider\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction DepositSuccessScreen() {\r\n    const classes = useStyles();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { deposit, setDeposit } = useContext(DepositContext);\r\n    const { id, toAccount, amountPaise, transferredAt } = deposit;\r\n    const amountRupees = amountPaise / 100;\r\n    const transferDate = new Date(transferredAt);\r\n\r\n    const handleOk = (e)=>{\r\n        e.preventDefault();\r\n        navigate('adminConsole/deposit', {replace: true});\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <div className={classes.heading}>\r\n                        Deposit Recorded Successfully!\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div className={classes.amount}>\r\n                        ₹{amountRupees}\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div className={classes.detailsHeading}>\r\n                        Details\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container\r\n                    style={{\r\n                        maxHeight: '40vh',\r\n                        overflowY: 'auto',\r\n                        border: '.2rem solid black'\r\n                    }}\r\n                    >\r\n                        <Grid item xs={12} md={4} className={classes.label}>\r\n                            To Account No.\r\n                        </Grid>\r\n                        <Grid item xs={12} md={8} className={classes.value}>\r\n                            {toAccount}\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} className={classes.label}>\r\n                            Transaction Id\r\n                        </Grid>\r\n                        <Grid item xs={12} md={8} className={classes.value}>\r\n                            {id}\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} className={classes.label}>\r\n                            Time of Transaction\r\n                        </Grid>\r\n                        <Grid item xs={12} md={8} className={classes.value}>\r\n                            {transferDate.toString()}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button className={classes.okButton} onClick={handleOk} sx={{\r\n                            color: 'greenyellow',\r\n                            backgroundColor: 'green',\r\n                            margin: '.5rem 0',\r\n                            border: '.1rem solid yellowgreen'\r\n                        }}>\r\n                            OK\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DepositSuccessScreen;","import LoadingContext from \"context/LoadingProvider\";\r\nimport { memo, useContext, useEffect } from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport useStyles from \"styles/DepositScreenStyles\";\r\nimport DepositInitiator from \"components/DepositInitiator\";\r\nimport DepositSuccessScreen from \"components/DepositSuccessScreen\";\r\n\r\nconst DepositScreen = memo(()=>{\r\n    const { loading, setLoading, loadingColor, setLoadingColor } = useContext(LoadingContext);\r\n\r\n    useEffect(\r\n        ()=>{\r\n            setLoadingColor('green');\r\n            // setLoading(false);\r\n        },\r\n        []\r\n    );\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <Routes>\r\n                <Route path='*' element={<DepositInitiator setLoading={setLoading} />} />\r\n                <Route path='success' element={<DepositSuccessScreen />} />\r\n            </Routes>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default DepositScreen;","import { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n\r\n}));\r\n\r\nexport default useStyles;","import { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    customerCard: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        msTransform: 'translateY(-50%)',\r\n        transform: 'translateY(-50%)',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundImage: 'linear-gradient(darkslategrey, black, darkslategrey)',\r\n        borderRadius: '1rem',\r\n        boxShadow: '0 0 .5rem crimson',\r\n        margin: '.5rem',\r\n    },\r\n\r\n    heading: {\r\n        fontWeight: 'bolder',\r\n        fontSize: '1.7rem',\r\n        color: 'lightslategrey',\r\n    },\r\n\r\n    avatarContainer: {\r\n        display: 'flex',\r\n        aspectRatio: '1 / 1',\r\n        height: '40vh',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    withdrawalForm: {\r\n        borderRadius: '1rem',\r\n        padding: '1rem'\r\n    },\r\n\r\n    entry: {\r\n        display: 'flex',\r\n        margin: '.5rem 0'\r\n    },\r\n\r\n    label: {\r\n        backgroundColor: 'beige',\r\n        margin: '.5% 2%',\r\n        padding: '.5rem',\r\n        borderRadius: '1rem',\r\n        width: '15rem',\r\n        textAlign: 'center',\r\n        fontWeight: 'bolder'\r\n    },\r\n\r\n    input: {\r\n        background: 'transparent',\r\n        color: 'pink',\r\n        // backgroundColor: 'white',\r\n        padding: '.5rem',\r\n        margin: '.5% 2%',\r\n        width: '100%',\r\n        borderRadius: '1rem',\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n\r\n        '&::-webkit-outer-spin-button':{\r\n            WebkitAppearance: 'none'\r\n        },\r\n\r\n        '&::-webkit-inner-spin-button':{\r\n            WebkitAppearance: 'none'\r\n        },\r\n\r\n        MozAppearance: 'textfield',\r\n    },\r\n}));\r\n\r\nexport default useStyles;","import axios from \"api/axios\";\r\nimport AuthContext from \"context/AuthProvider\";\r\nimport LoadingContext from \"context/LoadingProvider\";\r\nimport { useState, useContext } from \"react\";\r\nimport WithdrawalContext from \"context/WithdrawalProvider\";\r\nimport useStyles from \"styles/WithdrawalInitiatorStyles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Avatar, Button } from \"@mui/material\";\r\n\r\nconst WITHDRAWAL_URL = '/admin/deposits';\r\nfunction WithdrawalInitiator(){\r\n    const classes = useStyles();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const { withdrawal, setWithdrawal } = useContext(WithdrawalContext);\r\n    const { loading, setLoading, loadingColor, setLoadingColor } = useContext(LoadingContext);\r\n    \r\n    const [ accountId, setAccountId ] = useState('');\r\n    const [ amountRupees, setAmountRupees ] = useState('');\r\n    const amountPaise = amountRupees ? (-amountRupees * 100) : '';\r\n    // const [ loading, setLoading ] = useState(false);\r\n\r\n    const handleAccountIdUpdate = (e)=>{\r\n        const newId = parseInt(e.target.value) > 0 ? e.target.value : '';\r\n        setAccountId(newId);\r\n    }\r\n    const handleAmountRupeesUpdate = (e)=>{\r\n        const newAmount = parseInt(e.target.value) > 0 ? e.target.value : '';\r\n        setAmountRupees(newAmount);\r\n    }\r\n\r\n    const handleDeposit = async(e)=>{\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        try{\r\n            const token = auth?.token;\r\n            const response = await axios.post(\r\n                WITHDRAWAL_URL,\r\n                JSON.stringify({accountId, amountPaise}),\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: \"Bearer \"+token,\r\n                    },\r\n                }    \r\n            );\r\n            const withdrawalData = response?.data;\r\n            setWithdrawal(withdrawalData);\r\n            setLoading(false);\r\n            navigate('success', {replace: true})\r\n        }catch(err){\r\n            console.log(err);\r\n            setLoading(false);\r\n\r\n            if(!err?.response){\r\n                alert('No server response');\r\n            }\r\n            else{\r\n                alert(err?.response?.data?.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <div className={classes.customerCard}>\r\n                <span className={classes.heading}>\r\n                    DEPOSIT\r\n                </span>\r\n                <div className={classes.avatarContainer}>\r\n                    <Avatar\r\n                        sx={{\r\n                            bgcolor: 'pink',\r\n                            color: 'crimson',\r\n                            width: '70%',\r\n                            height: '70%',\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={classes.withdrawalForm}>\r\n                    <div className={classes.entry}>\r\n                        <label className={classes.label}>\r\n                            Account no.\r\n                        </label>\r\n                        <input\r\n                        id='account_no'\r\n                        type = 'number' \r\n                        className={classes.input}\r\n                        autoComplete='off'\r\n                        onChange={handleAccountIdUpdate}\r\n                        value={accountId}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.entry}>\r\n                        <label className={classes.label}>\r\n                            Withdrawal In ₹\r\n                        </label>\r\n                        <input\r\n                        id='amount'\r\n                        type = 'number' \r\n                        className={classes.input}\r\n                        autoComplete='off'\r\n                        onChange={handleAmountRupeesUpdate}\r\n                        value={amountRupees}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                    className={classes.submitButton}\r\n                    sx={{\r\n                        color: 'white', \r\n                        backgroundColor: '#4b484c',\r\n                        width: '100%',\r\n                        margin: '1rem 0'\r\n                        }}\r\n                    onClick={handleDeposit}\r\n                    disabled={!accountId.length || !amountRupees.length}\r\n                    >\r\n                        Record Withdrawal\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WithdrawalInitiator;","import { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontSize: '1.5rem',\r\n    },\r\n    heading:{\r\n        backgroundColor: 'black',\r\n        color: 'pink',\r\n        fontSize: '2rem',\r\n        borderRadius: '1rem',\r\n        boxShadow: '0 0 .5rem grey',\r\n    },\r\n    amount: {\r\n        color: 'royalblue',\r\n        fontSize: '3rem',\r\n    },\r\n    detailsHeading:{\r\n        backgroundColor: 'dimgrey',\r\n        fontWeight: 'bold',\r\n        border: '.2rem solid silver',\r\n    },\r\n    label:{\r\n        backgroundColor: 'darkslategrey',\r\n        padding: '1rem',\r\n        border: '.05rem solid black',\r\n    },\r\n    value:{\r\n        backgroundColor: 'grey',\r\n        padding: '1rem',\r\n        border: '.05rem solid black',\r\n    },\r\n}));\r\n\r\nexport default useStyles;","import useStyles from \"styles/WithdrawalSuccessScreenStyles\";\r\nimport { Grid, Button } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport WithdrawalContext from \"context/WithdrawalProvider\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction DepositSuccessScreen() {\r\n    const classes = useStyles();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { withdrawal, setWithdrawal } = useContext(WithdrawalContext);\r\n    const { id, fromAccount, amountPaise, transferredAt } = withdrawal;\r\n    const amountRupees = amountPaise / 100;\r\n    const transferDate = new Date(transferredAt);\r\n\r\n    const handleOk = (e)=>{\r\n        e.preventDefault();\r\n        navigate('adminConsole/withdrawal', {replace: true});\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <div className={classes.heading}>\r\n                        Withdrawal Recorded Successfully!\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div className={classes.amount}>\r\n                        ₹{amountRupees}\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div className={classes.detailsHeading}>\r\n                        Details\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container\r\n                    style={{\r\n                        maxHeight: '40vh',\r\n                        overflowY: 'auto',\r\n                        border: '.2rem solid black'\r\n                    }}\r\n                    >\r\n                        <Grid item xs={12} md={4} className={classes.label}>\r\n                            From Account No.\r\n                        </Grid>\r\n                        <Grid item xs={12} md={8} className={classes.value}>\r\n                            {fromAccount}\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} className={classes.label}>\r\n                            Transaction Id\r\n                        </Grid>\r\n                        <Grid item xs={12} md={8} className={classes.value}>\r\n                            {id}\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} className={classes.label}>\r\n                            Time of Transaction\r\n                        </Grid>\r\n                        <Grid item xs={12} md={8} className={classes.value}>\r\n                            {transferDate.toString()}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button className={classes.okButton} onClick={handleOk} sx={{\r\n                            color: 'pink',\r\n                            backgroundColor: 'brown',\r\n                            margin: '.5rem 0',\r\n                            border: '.1rem solid crimson'\r\n                        }}>\r\n                            OK\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DepositSuccessScreen;","import LoadingContext from \"context/LoadingProvider\";\r\nimport { memo, useContext, useEffect } from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport useStyles from \"styles/WithdrawalScreenStyles\";\r\nimport WithdrawalInitiator from \"components/WithdrawalInitiator\";\r\nimport WithdrawalSuccessScreen from \"components/WithdrawalSuccessScreen\";\r\n\r\nconst WithdrawalScreen = memo(()=>{\r\n    const { loading, setLoading, loadingColor, setLoadingColor } = useContext(LoadingContext);\r\n\r\n    useEffect(\r\n        ()=>{\r\n            setLoadingColor('green');\r\n            // setLoading(false);\r\n        },\r\n        []\r\n    );\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <Routes>\r\n                <Route path='*' element={<WithdrawalInitiator setLoading={setLoading} />} />\r\n                <Route path='success' element={<WithdrawalSuccessScreen />} />\r\n            </Routes>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default WithdrawalScreen;","import useStyles from \"styles/AdminConsoleStyles\";\r\nimport { Grid, Avatar, Popper, IconButton, Box, Button } from '@mui/material';\r\nimport { useContext, useEffect, useState, useRef, useMemo } from 'react';\r\nimport { useNavigate, Routes, Route, NavLink } from 'react-router-dom';\r\nimport AuthContext from 'context/AuthProvider';\r\nimport logo from 'assets/logo.svg';\r\nimport { recordDepositIcon, recordWithdrawalIcon } from \"assets/assets\";\r\nimport AdminConsoleProvider from \"context/AdminConsoleProvider\";\r\nimport DepositScreen from \"./DepositScreen\";\r\nimport WithdrawalScreen from \"./WithdrawalScreen\";\r\n\r\nfunction AdminConsole() {\r\n    const classes = useStyles();\r\n\r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(()=>{\r\n        // console.log(auth?.token)\r\n        if(! auth?.token){\r\n            if(! auth?.admin){\r\n                navigate('/customerConsole', {replace: true});\r\n            }\r\n            navigate('/login', {replace: true});\r\n        }\r\n    },[auth]);\r\n\r\n    const handleBannerClick = ()=>{\r\n        navigate('/adminConsole', {replace:true});\r\n    }\r\n\r\n    const Banner = useMemo(()=>{\r\n        return(\r\n            <div className={classes.banner} onClick={handleBannerClick}>\r\n                <div className={classes.logoContainer}>\r\n                    <img src={logo} alt='online_bank' className={classes.logo} />\r\n                </div>\r\n\r\n                <div className={classes.title}>\r\n                    Online Bank Administrator\r\n                </div>\r\n            </div>\r\n        )\r\n    },[]);\r\n\r\n    function TitleBar() {\r\n        const {name} = auth;\r\n        const user = (name) ? name : 'Loading...';\r\n        const [popperAnchor, setPopperAnchor] = useState(null);\r\n        const popperOpen = Boolean(popperAnchor);\r\n        const popperId = popperOpen ? 'avatarPopper' : undefined;\r\n\r\n        const avatarRef = useRef(null);\r\n        const popperRef = useRef(null);\r\n\r\n        useEffect(()=>{\r\n            const handleClickOutside = (event) => {\r\n                if (avatarRef.current && !avatarRef.current.contains(event.target) && popperRef.current && !popperRef.current.contains(event.target)) {\r\n                    setPopperAnchor(null);\r\n                }\r\n                };\r\n                    document.addEventListener('click', handleClickOutside, true);\r\n                return () => {\r\n                    document.removeEventListener('click', handleClickOutside, true);\r\n                };\r\n        },[]);\r\n\r\n        const handleAvatarClick = (e)=>{\r\n            // console.log('enter/leave');\r\n            setPopperAnchor(popperAnchor ? null : e.currentTarget);\r\n        }\r\n\r\n        const handleLogout = ()=>{\r\n            // console.log('admin logged out');\r\n            setAuth({});\r\n        }\r\n\r\n        return ( \r\n            <div className={classes.titleBar}>\r\n                {/* <Banner /> */}\r\n                {Banner}\r\n                <div className={classes.avatar}>\r\n                    <IconButton\r\n                        onClick={handleAvatarClick}\r\n                        ref={avatarRef}\r\n                    >\r\n                        <Avatar \r\n                            sx={{ bgcolor: 'black' }}\r\n                        />\r\n                    </IconButton>\r\n                    <Popper\r\n                        id={popperId}\r\n                        open={popperOpen}\r\n                        anchorEl={popperAnchor}\r\n                        ref={popperRef}\r\n                    >\r\n                        <Box\r\n                            className = {classes.popperBox}\r\n                        >\r\n                            <section className={classes.username}>\r\n                                {user}\r\n                            </section>\r\n                            <Button\r\n                                className={classes.logoutButton}\r\n                                onClick={handleLogout}\r\n                                sx={{\r\n                                    color:'red',\r\n                                    width: '100%',\r\n                                    backgroundColor: 'black'\r\n                                }}\r\n                            >\r\n                                Log Out\r\n                            </Button>\r\n                        </Box>\r\n                    </Popper>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function Body() {\r\n        const OptionButton = (props)=>{\r\n            // const icon = useMemo(()=>(`url(${props.icon})`),[]);\r\n            const icon = `url(${props.icon})`;\r\n            return(\r\n                <NavLink to={props.route}\r\n                    style={{\r\n                        textDecoration: 'none',\r\n                        color: 'white',\r\n                        width: '100%',\r\n                        display: 'block',\r\n                        aspectRatio: '1 / 1',\r\n                    }}\r\n                    replace\r\n                >\r\n                    <div style={{\r\n                        backgroundImage: icon,\r\n                        backgroundSize: 'contain',\r\n                        backgroundRepeat: 'no-repeat',\r\n                    }} \r\n                    className={classes.optionButton}\r\n                    onClick={props.onClick}\r\n                    id = {props.id}\r\n                    >   \r\n                            {props.name}\r\n                    </div>\r\n                </NavLink>\r\n            )\r\n        }\r\n\r\n        const Options = ()=>{\r\n            return(\r\n                <div className={classes.options}>\r\n                    <Grid container>\r\n                        <Grid item xs={6} md={2}>\r\n                            <OptionButton name='Record Deposit' icon={recordDepositIcon} id='depositButton' route='deposit' />\r\n                        </Grid>\r\n                        <Grid item xs={6} md={2}>\r\n                            <OptionButton name='Record Withdrawal' icon={recordWithdrawalIcon} id='withdrawalButton' route='withdrawal' />\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className={classes.body}>\r\n                <Routes>\r\n                    <Route path='*' element={<Options />} />\r\n                    <Route path='deposit/*' element={<DepositScreen />} />\r\n                    <Route path='withdrawal/*' element={<WithdrawalScreen />} />\r\n                </Routes>\r\n            </div> \r\n        );\r\n    }\r\n\r\n    return (\r\n        <AdminConsoleProvider>\r\n            <div className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <TitleBar />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Body />\r\n                    </Grid>\r\n                </Grid>\r\n            </div> \r\n        </AdminConsoleProvider>\r\n    );\r\n}\r\n\r\nexport default AdminConsole;"],"names":["makeStyles","theme","logoContainer","logo","width","padding","titleBar","background","display","alignItems","height","banner","cursor","title","fontSize","color","avatar","marginLeft","popperBox","backgroundColor","border","borderRadius","username","textAlign","body","overflowY","optionButton","fontWeight","backgroundSize","justifyContent","margin","WithdrawalContext","createContext","DepositContext","providers","_ref","children","_useState","useState","_useState2","_slicedToArray","withdrawal","setWithdrawal","_jsx","Provider","value","deposit","setDeposit","combineComponents","root","customerCard","position","top","msTransform","transform","flexDirection","backgroundImage","boxShadow","heading","avatarContainer","aspectRatio","depositForm","entry","label","input","WebkitAppearance","MozAppearance","DEPOSIT_URL","classes","useStyles","navigate","useNavigate","_useContext","useContext","AuthContext","auth","_useContext2","setAuth","_useContext3","LoadingContext","setLoading","loading","loadingColor","setLoadingColor","accountId","setAccountId","_useState3","_useState4","amountRupees","setAmountRupees","amountPaise","handleDeposit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","token","response","depositData","_err$response","_err$response$data","wrap","_context","prev","next","preventDefault","axios","JSON","stringify","headers","Authorization","sent","data","replace","t0","alert","message","stop","_x","apply","arguments","className","_jsxs","Avatar","sx","bgcolor","id","type","autoComplete","onChange","newId","parseInt","target","newAmount","Button","submitButton","onClick","disabled","length","amount","detailsHeading","toAccount","transferredAt","transferDate","Date","Grid","container","item","xs","style","maxHeight","md","toString","okButton","memo","useEffect","Routes","Route","path","element","DepositInitiator","DepositSuccessScreen","withdrawalForm","WITHDRAWAL_URL","withdrawalData","console","log","fromAccount","WithdrawalInitiator","WithdrawalSuccessScreen","admin","handleBannerClick","Banner","useMemo","src","alt","TitleBar","name","user","popperAnchor","setPopperAnchor","popperOpen","Boolean","popperId","undefined","avatarRef","useRef","popperRef","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","IconButton","currentTarget","ref","Popper","open","anchorEl","Box","logoutButton","Body","OptionButton","props","icon","concat","NavLink","to","route","textDecoration","backgroundRepeat","Options","options","recordDepositIcon","recordWithdrawalIcon","DepositScreen","WithdrawalScreen","AdminConsoleProvider"],"sourceRoot":""}